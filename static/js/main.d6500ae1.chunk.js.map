{"version":3,"sources":["images/JaminYip.jpg","bg.jpg","components/AppBar.tsx","components/pages/GetPage.tsx","components/pages/AboutPage.tsx","components/Tabs.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","marginBottom","spacing","bottom","toolbar","flexWrap","toolbarTitle","flexGrow","display","color","link","avatar","marginRight","width","height","linkAttr","target","rel","CustomizedTabsAppBar","classes","trigger","useScrollTrigger","Fragment","CssBaseline","Slide","appear","direction","in","timeout","enter","exit","AppBar","position","elevation","className","Toolbar","Typography","variant","Avatar","alt","src","JaminYipAvatar","href","style","Page","root","maxWidth","Types","component","gutterBottom","GetPage","props","Container","backgroundColor","pageIndex","About","Skills","History","Works","tabsStyles","boxShadow","overflow","fixed","indicator","transform","tabItemStyles","lineHeight","minHeight","fontSize","opacity","wrapper","flexDirection","letterSpacing","textTransform","containerStyles","top","CustomizedTabs","React","useState","tabIndex","setTabIndex","tabs","tabItems","container","Tabs","value","onChange","e","index","centered","Tab","label","icon","App","bgImage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6500ae1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JaminYip.3c134aad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.6b850108.jpg\";","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport JaminYipAvatar from '../images/JaminYip.jpg'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    marginBottom: theme.spacing(1.0),\n    bottom: '70',\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    marginBottom: theme.spacing(-0.5),\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    display: 'flex',\n    color: '#000000',\n  },\n  link: {\n    margin: theme.spacing(1, 1.0),\n  },\n  avatar: {\n    margin: theme.spacing(0.3),\n    marginRight: theme.spacing(1.0),\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nconst linkAttr = {\n  target: '_blank',\n  rel: 'noopener noreferrer',\n}\n\nexport default function CustomizedTabsAppBar() {\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Slide appear={true} direction=\"down\" in={!trigger} timeout={{enter:600, exit:600,}}>\n      <AppBar position=\"sticky\" color=\"default\" elevation={5} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"overline\" className={classes.toolbarTitle}>\n            <Avatar alt=\"JaminYip\" src={JaminYipAvatar} className={classes.avatar} />JaminYip's Portfolio\n          </Typography>\n          <nav>\n             <a href=\"https://github.com/JaminYip\" {...linkAttr} className={classes.link}>\n              <GitHubIcon style={{color:'#000000'}} />\n             </a>\n             <a href=\"https://www.facebook.com/jamin.yip\" {...linkAttr} className={classes.link}>\n              <FacebookIcon style={{color:'#3B5998'}} />\n             </a>\n          </nav>\n        </Toolbar>\n      </AppBar>\n      </Slide>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport AboutPage from './AboutPage';\n\nenum Page {\n  About,\n  Skills,\n  History,\n  Works,\n}\n\nexport default function GetPage(props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Typography component=\"div\" style={{ backgroundColor: '#ffffff', color: '#555555', height: '100vh' }} >\n          {\n            function() {\n              switch(props.pageIndex) {\n                case Page.About:\n                  return (<AboutPage />);\n                case Page.Skills:\n                  return (<div>Skills</div>);\n                case Page.History:\n                  return (<div>History</div>);\n                case Page.Works:\n                  return (<div>Works</div>);\n                default:\n                  return (<React.Fragment />);\n              }\n            }()\n          }\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 500,\n  },\n});\n\nexport default function Types() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n        h1. Heading\n      </Typography>\n      <Typography variant=\"h2\" gutterBottom>\n        h2. Heading\n      </Typography>\n      <Typography variant=\"h3\" gutterBottom>\n        h3. Heading\n      </Typography>\n      <Typography variant=\"h4\" gutterBottom>\n        h4. Heading\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom>\n        h5. Heading\n      </Typography>\n      <Typography variant=\"h6\" gutterBottom>\n        h6. Heading\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant=\"subtitle2\" gutterBottom>\n        subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant=\"button\" display=\"block\" gutterBottom>\n        button text\n      </Typography>\n      <Typography variant=\"caption\" display=\"block\" gutterBottom>\n        caption text\n      </Typography>\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\n        overline text\n      </Typography>\n    </div>\n  );\n}\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Container from '@material-ui/core/Container';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport BookmarkBorderOutlined from '@material-ui/icons/BookmarkBorderOutlined';\nimport FormatListBulletedOutlinedIcon from '@material-ui/icons/FormatListBulletedOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GetPage from './pages/GetPage'\n\nconst tabsStyles = makeStyles({\n  root: {\n    boxShadow: 'inset 0 1px 0 0 #efefef',\n    overflow: 'visible',\n  },\n  fixed: {\n    overflow: 'visible !important',\n  },\n  indicator: {\n    height: 1,\n    transform: 'translateY(-51px)',\n    backgroundColor: '#262626',\n  },\n});\n\nconst tabItemStyles = makeStyles({\n  root: {\n    lineHeight: 'inherit',\n    minHeight: 53,\n    //minWidth: 0,\n    fontSize: 11,\n    opacity: 0.4,\n    '&:not(:last-child)': {\n      //marginRight: 60,\n      //[breakpoints.up('sm')]: {\n      //  marginRight: 60,\n      //},\n    },\n    //[breakpoints.up('md')]: {\n    //  minWidth: 0,\n    //},\n  },\n  wrapper: {\n    flexDirection: 'row',\n    letterSpacing: '1px',\n    textTransform: 'uppercase',\n    '& svg, .material-icons': {\n      fontSize: 13,\n      margin: 5,\n    },\n  },\n});\n\nconst containerStyles = makeStyles({\n  root: {\n    position: 'sticky',\n    top: '0px',\n    backgroundColor: '#fafafa',\n  },\n});\n\nexport default function CustomizedTabs() {\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const tabs = tabsStyles();\n  const tabItems = tabItemStyles();\n  const container = containerStyles();\n\n  return (\n    <React.Fragment>\n    <Container maxWidth=\"lg\" classes={container}>\n    <Tabs\n      classes={{\n        root: tabs.root,\n        fixed: tabs.fixed,\n        indicator: tabs.indicator,\n      }}\n      value={tabIndex}\n      onChange={(e, index) => setTabIndex(index)}\n      centered\n    >\n      <Tab\n        classes={{\n          root: tabItems.root,\n          wrapper: tabItems.wrapper,\n        }} label={'About'} icon={<InfoOutlinedIcon />} />\n      <Tab\n        classes={{\n          root: tabItems.root,\n          wrapper: tabItems.wrapper,\n        }} label={'Skills'} icon={<SettingsOutlinedIcon />} />\n      <Tab\n        classes={{\n          root: tabItems.root,\n          wrapper: tabItems.wrapper,\n        }} label={'History'} icon={<BookmarkBorderOutlined />} />\n      <Tab\n        classes={{\n          root: tabItems.root,\n          wrapper: tabItems.wrapper,\n        }} label={'Works'} icon={<FormatListBulletedOutlinedIcon />} />\n    </Tabs>\n    </Container>\n    <br /><br /><br /><br />\n    <GetPage pageIndex={tabIndex} />\n    </React.Fragment>\n  );\n};","import React from 'react';\nimport './App.css';\nimport AppBar from './components/AppBar'\nimport Tabs from './components/Tabs';\nimport bgImage from './bg.jpg'\n\n// const styles = {\n//     app: {\n//         textAlign: 'center'\n//     },\n//     '@keyframes App-logo-spin': {\n//         from: {\n//             transform: 'rotate(0deg)'\n//         },\n//         to: {\n//             transform: 'rotate(360deg)'\n//         }\n//     },\n//     appLogo: {\n//         animation: 'App-logo-spin infinite 20s linear',\n//         height: '40vmin'\n//     },\n//     appHeader: {\n//         backgroundColor: '#282c34',\n//         minHeight: '100vh',\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         justifyContent: 'center',\n//         fontSize: 'calc(10px + 2vmin)',\n//         color: 'white'\n//     },\n//     appLink: {\n//         color: '#61dafb'\n//     }\n// };\n\nconst App: React.FC = () => {\n  return (\n    <React.Fragment>\n      <AppBar />\n      <img className=\"bgImage\" src={bgImage} alt=\"bgImage\" />\n      <Tabs />\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}