{"version":3,"sources":["bg.jpg","components/pages/TopPage.tsx","components/pages/AboutPage.tsx","components/pages/GetPage.tsx","Nav.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","root","width","maxWidth","Types","classes","className","Typography","variant","component","gutterBottom","display","Page","GetPage","props","Fragment","CssBaseline","Container","style","backgroundColor","color","height","pageIndex","Top","About","Skills","CareerHistory","AntTabs","withStyles","borderBottom","indicator","Tabs","AntTab","theme","createStyles","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginLeft","spacing","fontFamily","join","opacity","fontWeightMedium","selected","Tab","disableRipple","StyledTabs","justifyContent","TabIndicatorProps","children","StyledTab","fontSize","pxToRem","flexGrow","padding","tabTop","position","top","palette","background","paper","tabBottom","CustomizedTabs","React","useState","value","setValue","handleChange","event","newValue","onChange","aria-label","icon","label","App","src","bgImage","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db5b9246.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.6b850108.jpg\";","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 500,\n  },\n});\n\nexport default function Types() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n        h1. Heading\n      </Typography>\n      <Typography variant=\"h2\" gutterBottom>\n        h2. Heading\n      </Typography>\n      <Typography variant=\"h3\" gutterBottom>\n        h3. Heading\n      </Typography>\n      <Typography variant=\"h4\" gutterBottom>\n        h4. Heading\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom>\n        h5. Heading\n      </Typography>\n      <Typography variant=\"h6\" gutterBottom>\n        h6. Heading\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant=\"subtitle2\" gutterBottom>\n        subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant=\"button\" display=\"block\" gutterBottom>\n        button text\n      </Typography>\n      <Typography variant=\"caption\" display=\"block\" gutterBottom>\n        caption text\n      </Typography>\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\n        overline text\n      </Typography>\n    </div>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 800,\n  },\n});\n\nexport default function Types() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n        About.\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        Webアプリケーションを専門に歴6年のエンジニアです。<br />\n        主にバックエンドにおけるシステムの設計・開発・保守まで担当。<br />\n        2012年よりアルバイトにてiOSアプリ(iPhone及びiPad)開発を始める。<br />\n        2014年から独立系SIer企業にWebアプリケーションをメインに開発の業務を行う。<br />\n        使用言語はPython,Java,C#\n      </Typography>\n      <Typography variant=\"h3\" gutterBottom>\n        h3. Heading\n      </Typography>\n      <Typography variant=\"h4\" gutterBottom>\n        h4. Heading\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom>\n        h5. Heading\n      </Typography>\n      <Typography variant=\"h6\" gutterBottom>\n        h6. Heading\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant=\"subtitle2\" gutterBottom>\n        subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n        unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam\n        dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\n      </Typography>\n      <Typography variant=\"button\" display=\"block\" gutterBottom>\n        button text\n      </Typography>\n      <Typography variant=\"caption\" display=\"block\" gutterBottom>\n        caption text\n      </Typography>\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\n        overline text\n      </Typography>\n    </div>\n  );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TopPage from './TopPage';\nimport AboutPage from './AboutPage';\n\nenum Page {\n  Top,\n  About,\n  Skills,\n  CareerHistory,\n}\n\nexport default function GetPage(props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Typography component=\"div\" style={{ backgroundColor: '#ffffff', color: '#555555', height: '100vh' }} >\n          {\n            function() {\n              switch(props.pageIndex) {\n                case Page.Top:\n                  return (<TopPage />);\n                case Page.About:\n                  return (<AboutPage />);\n                case Page.Skills:\n                  return (<div>Skills</div>);\n                case Page.CareerHistory:\n                  return (<div>CareerHistory</div>);\n                default:\n                  return (<React.Fragment />);\n              }\n            }()\n          }\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles, withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n// import PersonIcon from '@material-ui/icons/Person';\n// import PersonPinIcon from '@material-ui/icons/PersonPin';\n// import MoodIcon from '@material-ui/icons/Mood';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport FaceOutlinedIcon from '@material-ui/icons/FaceOutlined';\n// import LaptopMacOutlinedIcon from '@material-ui/icons/LaptopMacOutlined';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport WorkOutlineOutlinedIcon from '@material-ui/icons/WorkOutlineOutlined';\nimport GetPage from './components/pages/GetPage'\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: '1px solid #e8e8e8',\n  },\n  indicator: {\n    backgroundColor: '#1890ff',\n    //backgroundColor: '#ffffff',\n  },\n})(Tabs);\n\nconst AntTab = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textTransform: 'none',\n      minWidth: 20,\n      fontWeight: theme.typography.fontWeightRegular,\n      marginLeft: theme.spacing(5),\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:hover': {\n        color: '#40a9ff',\n        opacity: 1,\n      },\n      '&$selected': {\n        color: '#1890ff',\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n      '&:focus': {\n        //color: '#40a9ff',\n        color: '#40a9ff',\n      },\n    },\n    selected: {},\n  }),\n)((props: StyledTabProps) => <Tab disableRipple {...props} />);\n\ninterface StyledTabsProps {\n  value: number;\n  onChange: (event: React.ChangeEvent<{}>, newValue: number) => void;\n}\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    //backgroundColor: '#a5076e',\n    '& > div': {\n      //maxWidth: 40,\n      maxWidth: 60,\n      width: '100%',\n      //backgroundColor: '#635ee7',\n      backgroundColor: '#a5076e',\n    },\n  },\n})((props: StyledTabsProps) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\ninterface StyledTabProps {\n  label: string;\n}\n\nconst StyledTab = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textTransform: 'none',\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightRegular,\n      //fontSize: theme.typography.pxToRem(15),\n      fontSize: theme.typography.pxToRem(18),\n      marginLeft: theme.spacing(5),\n      '&:focus': {\n        opacity: 1,\n      },\n    },\n  }),\n)((props: StyledTabProps) => <Tab disableRipple {...props} />);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  padding: {\n    //padding: theme.spacing(3),\n    padding: theme.spacing(1),\n  },\n  tabTop: {\n    position: 'sticky',\n    top: '0',\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabBottom: {\n    position: 'sticky',\n    top: '65px',\n    //backgroundColor: '#000000',\n    background: 'linear-gradient(45deg, #000000 45%, #eeeeee 95%)',\n    //background: 'linear-gradient(.25turn, #eeeeee, #000000 5%, #000000 50%, #000000 5%, #eeeeee)',\n    backgroundColor: 'rgba(0,0,0,1)',\n    //backgroundColor: '#2e1534',\n    //backgroundColor: 'rgba(46,21,52,0.8)',\n    //backgroundColor: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  },\n}));\n\nexport default function CustomizedTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n    //const targetElement = document.getElementById(\"tabs\");\n    //const clientRect = targetElement.getBoundingClientRect();\n    //const test = event.target();\n    //const test = event.target.getBoundingClientRect().height;\n    //console.log(test);\n    //window.scrollTo({top: window.scrollY, left: 0, behavior: 'smooth'});\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.tabTop}>\n        <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n          <AntTab icon={<HomeOutlinedIcon />} />\n          <AntTab icon={<FaceOutlinedIcon />} />\n          <AntTab icon={<SettingsOutlinedIcon />} />\n          <AntTab icon={<WorkOutlineOutlinedIcon />} />\n        </AntTabs>\n        <Typography className={classes.padding} />\n      </div>\n      <div className={classes.tabBottom}>\n        <StyledTabs value={value} onChange={handleChange} aria-label=\"styled tabs example\">\n          <StyledTab label=\"Top\" />\n          <StyledTab label=\"About\" />\n          <StyledTab label=\"Skills\" />\n          <StyledTab label=\"Career History\" />\n        </StyledTabs>\n        <Typography className={classes.padding} />\n      </div>\n      <br /><br /><br /><br />\n      <GetPage pageIndex={value} />\n    </div>\n  );\n}","import React from 'react';\n//import logo from './logo.svg';\n//import { withStyles } from '@material-ui/core/styles';\nimport './App.css';\n//import AppBar from './AppBar'\nimport Nav from './Nav';\n//import Hook from './Hook'\nimport bgImage from './bg.jpg'\n\n// const styles = {\n//     app: {\n//         textAlign: 'center'\n//     },\n//     '@keyframes App-logo-spin': {\n//         from: {\n//             transform: 'rotate(0deg)'\n//         },\n//         to: {\n//             transform: 'rotate(360deg)'\n//         }\n//     },\n//     appLogo: {\n//         animation: 'App-logo-spin infinite 20s linear',\n//         height: '40vmin'\n//     },\n//     appHeader: {\n//         backgroundColor: '#282c34',\n//         minHeight: '100vh',\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         justifyContent: 'center',\n//         fontSize: 'calc(10px + 2vmin)',\n//         color: 'white'\n//     },\n//     appLink: {\n//         color: '#61dafb'\n//     }\n// };\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <img className=\"bgImage\" src={bgImage} alt=\"bgImage\"/>\n      <Nav />\n    </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import {Provider} from '@material-ui/core/styles'\n// import {MuiThemeProvider} from '@material-ui/core/styles'\n// import {theme} from './theme'\n\n//const store = createStore(todoApp)\n\nReactDOM.render(\n//<Provider store={store}>\n//  <MuiThemeProvider theme={theme}>\n      <App />,\n//  </MuiThemeProvider>,\n//</Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}